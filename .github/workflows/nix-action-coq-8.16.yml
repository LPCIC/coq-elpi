jobs:
  coq:
    needs: []
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target coq
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"coq\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho ::set-output name=status::$(echo $nb_dry_run | grep\
        \ \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
  coq-elpi:
    needs:
    - coq
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target coq-elpi
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"coq-elpi\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho ::set-output name=status::$(echo $nb_dry_run | grep\
        \ \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
  hierarchy-builder:
    needs:
    - coq
    - coq-elpi
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target hierarchy-builder
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"hierarchy-builder\" \\\n   --dry-run\
        \ 2>&1 > /dev/null)\necho $nb_dry_run\necho ::set-output name=status::$(echo\
        \ $nb_dry_run | grep \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
  mathcomp:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - mathcomp-solvable
    - mathcomp-field
    - mathcomp-character
    - coq-elpi
    - hierarchy-builder
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target mathcomp
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"mathcomp\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho ::set-output name=status::$(echo $nb_dry_run | grep\
        \ \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-character'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-character"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp"
  mathcomp-algebra:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - coq-elpi
    - hierarchy-builder
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target mathcomp-algebra
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"mathcomp-algebra\" \\\n   --dry-run 2>&1\
        \ > /dev/null)\necho $nb_dry_run\necho ::set-output name=status::$(echo $nb_dry_run\
        \ | grep \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-algebra"
  mathcomp-character:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - mathcomp-solvable
    - mathcomp-field
    - coq-elpi
    - hierarchy-builder
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target mathcomp-character
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"mathcomp-character\" \\\n   --dry-run\
        \ 2>&1 > /dev/null)\necho $nb_dry_run\necho ::set-output name=status::$(echo\
        \ $nb_dry_run | grep \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-character"
  mathcomp-field:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - mathcomp-solvable
    - coq-elpi
    - hierarchy-builder
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target mathcomp-field
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"mathcomp-field\" \\\n   --dry-run 2>&1\
        \ > /dev/null)\necho $nb_dry_run\necho ::set-output name=status::$(echo $nb_dry_run\
        \ | grep \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-field"
  mathcomp-fingroup:
    needs:
    - coq
    - mathcomp-ssreflect
    - coq-elpi
    - hierarchy-builder
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target mathcomp-fingroup
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"mathcomp-fingroup\" \\\n   --dry-run\
        \ 2>&1 > /dev/null)\necho $nb_dry_run\necho ::set-output name=status::$(echo\
        \ $nb_dry_run | grep \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-fingroup"
  mathcomp-solvable:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - coq-elpi
    - hierarchy-builder
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target mathcomp-solvable
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"mathcomp-solvable\" \\\n   --dry-run\
        \ 2>&1 > /dev/null)\necho $nb_dry_run\necho ::set-output name=status::$(echo\
        \ $nb_dry_run | grep \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-solvable"
  mathcomp-ssreflect:
    needs:
    - coq
    - coq-elpi
    - hierarchy-builder
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target mathcomp-ssreflect
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"mathcomp-ssreflect\" \\\n   --dry-run\
        \ 2>&1 > /dev/null)\necho $nb_dry_run\necho ::set-output name=status::$(echo\
        \ $nb_dry_run | grep \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
  odd-order:
    needs:
    - coq
    - mathcomp-character
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - mathcomp-solvable
    - mathcomp-field
    - mathcomp
    runs-on: ubuntu-latest
    steps:
    - name: Determine which commit to test
      run: "if [ ${{ github.event_name }} = \"push\" ]; then\n  echo \"tested_commit=${{\
        \ github.sha }}\" >> $GITHUB_ENV\nelse\n  merge_commit=$(git ls-remote ${{\
        \ github.event.repository.html_url }} refs/pull/${{ github.event.number }}/merge\
        \ | cut -f1)\n  if [ -z \"$merge_commit\" ]; then\n    echo \"tested_commit=${{\
        \ github.event.pull_request.head.sha }}\" >> $GITHUB_ENV\n  else\n    echo\
        \ \"tested_commit=$merge_commit\" >> $GITHUB_ENV\n  fi\nfi\n"
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ env.tested_commit }}
    - name: Cachix install
      uses: cachix/install-nix-action@v16
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq-elpi
      uses: cachix/cachix-action@v10
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        extraPullNames: coq, coq-community, math-comp
        name: coq-elpi
    - id: stepCheck
      name: Checking presence of CI target odd-order
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n   --argstr\
        \ bundle \"coq-8.16\" --argstr job \"odd-order\" \\\n   --dry-run 2>&1 > /dev/null)\n\
        echo $nb_dry_run\necho ::set-output name=status::$(echo $nb_dry_run | grep\
        \ \"built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-character'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-character"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "mathcomp"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "coq-8.16"
        --argstr job "odd-order"
name: Nix CI for bundle coq-8.16
'on':
  pull_request:
    paths:
    - .github/workflows/**
  pull_request_target:
    types:
    - opened
    - synchronize
    - reopened
  push:
    branches:
    - master
